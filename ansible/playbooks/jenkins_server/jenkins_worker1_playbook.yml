---
# Jenkins Server Playbook
# This playbook applies the base_server role for system configuration and jenkins_podman role to deploy Jenkins

- name: Deploy Jenkins Server
  hosts: jenkins_worker1
  become: yes
  gather_facts: yes
  
  roles:
    - role: ../../roles/base_server
    - role: ../../roles/virtfs_mount
  
  tasks:
    - name: Install OpenJDK 21 JRE headless
      apt:
        name: openjdk-21-jre-headless
        state: present
        update_cache: yes
    
    - name: Install Ansible
      apt:
        name: ansible
        state: present

    - name: Install common CI pipeline tools
      apt:
        name:
          - git
          - vim
          - python3-pip
          - jq
          - yq
          - zip
          - unzip
          - make
          - build-essential
          - curl
          - wget
          - gnupg2
        state: present

    - name: Install Docker prerequisites
      apt:
        name:
          - ca-certificates
          - lsb-release
          - gnupg
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install 1Password CLI
      block:
        - name: Add 1Password apt repository
          shell: |
            curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main" | sudo tee /etc/apt/sources.list.d/1password.list
          args:
            creates: /etc/apt/sources.list.d/1password.list

        - name: Install 1Password CLI package
          apt:
            name: 1password-cli
            state: present
            update_cache: yes

    - name: Install pipx to manage Python packages
      apt:
        name: 
          - pipx
          - python3-venv
          - python3-full
        state: present

    - name: Ensure pipx is in the PATH for all users
      shell: |
        pipx ensurepath
      args:
        creates: /home/ubuntu/.local/bin/pipx
      become: yes
      become_user: ubuntu

    - name: Install Python applications for CI using pipx
      shell: |
        pipx install {{ item }}
      args:
        creates: /home/ubuntu/.local/bin/{{ item.split('[')[0] }}
      loop:
        - pytest
        - flake8
        - black
        - yamllint
        - ansible-lint
      become: yes
      become_user: ubuntu
    
    - name: Create Python virtual environment for CI libraries
      shell: |
        python3 -m venv /home/ubuntu/ci-venv
      args:
        creates: /home/ubuntu/ci-venv/bin/python
      become: yes
      become_user: ubuntu
    
    - name: Install Python libraries in virtual environment
      shell: |
        /home/ubuntu/ci-venv/bin/pip install pytest-cov
      args:
        creates: /home/ubuntu/ci-venv/lib/python3.*/site-packages/pytest_cov*
      become: yes
      become_user: ubuntu
    
    - name: Download Jenkins agent.jar
      shell: curl -sO http://jenkins-server.i.psilva.org:8080/jnlpJars/agent.jar
      args:
        chdir: /home/ubuntu
        creates: /home/ubuntu/agent.jar

    - name: Create secret file for Jenkins agent
      file:
        path: /home/ubuntu/secret-file
        state: touch
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Ensure work directory exists
      file:
        path: /mnt/jenkins-worker1
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      
    - name: Create Jenkins agent systemd service
      template:
        src: ../../roles/jenkins_podman/templates/jenkins-agent.service.j2
        dest: /etc/systemd/system/jenkins-agent.service
        owner: root
        group: root
        mode: '0644'
      vars:
        agent_jar_path: /home/ubuntu/agent.jar
        jenkins_url: http://jenkins-server.i.psilva.org:8080/
        agent_name: jenkins-worker1
        secret_file: /home/ubuntu/secret-file
        work_dir: /mnt/jenkins-worker1
        
    - name: Enable and start Jenkins agent service
      systemd:
        name: jenkins-agent
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Reminder to edit secret file
      debug:
        msg: |
          IMPORTANT: After playbook completes, please:
          1. Edit /home/ubuntu/secret-file with the Jenkins agent secret from the Jenkins server
          2. Restart the Jenkins agent service with: sudo systemctl restart jenkins-agent

  post_tasks:
    - name: Report completion
      debug:
        msg: "Jenkins server configuration completed successfully on {{ inventory_hostname }}"
    