pipeline {
  agent any

  options {
      ansiColor('xterm')
  }

  environment {
    // MegaLinter configuration
    MEGALINTER_CONFIG = '.mega-linter.yml'
    REPORT_OUTPUT_FOLDER = 'megalinter-reports'
    VALIDATE_ALL_CODEBASE = 'true'
    // Use the DISABLE_ERRORS setting from the configuration file
    // DISABLE_ERRORS = 'false' 
    ENABLE_LINTERS = ''  // Leave empty to enable all linters by default or specify comma-separated list
  }
  
  stages {
    stage('Prepare') {
      steps {                
        // Check if .mega-linter.yml exists
        script {
          if (!fileExists('.mega-linter.yml')) {
              error "No .mega-linter.yml configuration file found in repository root. Please add one."
          } else {
              echo "Found .mega-linter.yml configuration file."
          }
        }
      }
    }
      
    stage('Lint') {
      steps {
        // Check if Docker is available
        sh 'docker --version || (echo "Docker is required to run MegaLinter" && exit 1)'
        script {

          sh '''
          # Clean previous reports
          rm -rf ${REPORT_OUTPUT_FOLDER} || true
          mkdir -p ${REPORT_OUTPUT_FOLDER}
          
          # Run MegaLinter Docker container
          docker run --rm \\
              -v $(pwd):/tmp/lint \\
              -e MEGALINTER_CONFIG=/tmp/lint/${MEGALINTER_CONFIG} \\
              -e REPORT_OUTPUT_FOLDER=/tmp/lint/${REPORT_OUTPUT_FOLDER} \\
              -e VALIDATE_ALL_CODEBASE=${VALIDATE_ALL_CODEBASE} \\
              -e ENABLE_LINTERS="${ENABLE_LINTERS}" \\
              oxsecurity/megalinter:v7.10.0
          
          # Set permissions for reports
          chmod -R 777 ${REPORT_OUTPUT_FOLDER} || true
          ''' 
        }
      }
    }

    post {
      success {
          echo 'Linting completed successfully!'
      }
      failure {
        script {
            echo 'Linting found issues! Check the reports for details.'
        }
      }
      always {
        // Archive MegaLinter reports
        // archiveArtifacts artifacts: "${REPORT_OUTPUT_FOLDER}/**/*", allowEmptyArchive: true
        
        // Publish HTML reports
        publishHTML([
          allowMissing: true,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: "${REPORT_OUTPUT_FOLDER}",
          reportFiles: 'index.html',
          reportName: 'MegaLinter Report'
        ])
        cleanWs()
      }
    }
  }
}

